openapi: 3.0.0
info:
  title: toban API
  version: 0.0.1
servers:
- description: dev
  url: http://localhost:8080/api
paths:
  /members:
    get:
      operationId: get_members
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Member'
                type: array
          description: |
            200 response
      summary: get members
    post:
      operationId: post_members
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewMember'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/New'
          description: Successful
      summary: post a new member
  /members/{member_id}:
    get:
      operationId: get_members_member_id
      parameters:
      - explode: false
        in: path
        name: member_id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Member'
          description: 200 response
      summary: get a member
  /roles:
    get:
      operationId: get_roles
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Role'
                type: array
          description: Successful response
      summary: get roles
    post:
      operationId: post_roles
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewRole'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/New'
          description: Successful response
      summary: post a new member
  /roles/{role_id}:
    get:
      operationId: get_roles_role_id
      parameters:
      - explode: false
        in: path
        name: role_id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
          description: Successful response
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
      summary: get a role
  /assignments:
    get:
      operationId: get_assignments
      parameters:
      - explode: true
        in: query
        name: from
        required: true
        schema:
          format: date
          type: string
        style: form
      - explode: true
        in: query
        name: to
        required: true
        schema:
          format: date
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Assignment'
                type: array
          description: Successful response
      summary: get assignments
components:
  schemas:
    Error:
      description: general error response
      properties:
        code:
          description: application specific error code
          type: string
        message:
          description: human readable error message
          type: string
      type: object
    New:
      description: general response for posting new resource
      example:
        id: 0
      properties:
        id:
          format: int64
          type: integer
      required:
      - id
      type: object
    Member:
      description: member
      example:
        name: name
        id: 0
      properties:
        id:
          description: member id
          format: int64
          type: integer
        name:
          description: name of the member
          type: string
      required:
      - id
      - name
      type: object
    NewMember:
      description: new member
      example:
        name: name
      properties:
        name:
          description: name of the member
          type: string
      required:
      - name
      type: object
    Role:
      description: role
      example:
        emoji: emoji
        name: name
        id: 0
      properties:
        id:
          description: role id
          format: int64
          type: integer
        name:
          description: name of the role
          type: string
        emoji:
          description: emoji icon key of the role (e.g. '+1', 'tada')
          type: string
      required:
      - id
      - name
      type: object
    NewRole:
      description: role
      example:
        emoji: emoji
        name: name
      properties:
        name:
          description: name of the role
          type: string
        emoji:
          description: emoji icon key of the role (e.g. '+1', 'tada')
          type: string
      required:
      - name
      type: object
    Assignment:
      description: assignment of role
      example:
        member_id: 1
        end_at: 2000-01-23
        role_id: 6
        id: 0
        start_at: 2000-01-23
      properties:
        id:
          description: assignment id
          format: int64
          type: integer
        role_id:
          description: role id
          format: int64
          type: integer
        start_at:
          description: date when assignment start
          format: date
          type: string
        end_at:
          description: date when assignment end (inclusive)
          format: date
          type: string
        member_id:
          description: member id
          format: int64
          type: integer
      required:
      - end_at
      - id
      - member_id
      - role_id
      - start_at
      type: object

