/* tslint:disable */
/* eslint-disable */
/**
 * toban API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import {
    Member,
    MemberFromJSON,
    MemberToJSON,
} from '../models';

export interface GetMembersMemberIdRequest {
    memberId: number;
}

/**
 * 
 */
export class DefaultApi extends runtime.BaseAPI {

    /**
     * get members
     */
    async getMembersRaw(): Promise<runtime.ApiResponse<Array<Member>>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/members`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        });

        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(MemberFromJSON));
    }

    /**
     * get members
     */
    async getMembers(): Promise<Array<Member>> {
        const response = await this.getMembersRaw();
        return await response.value();
    }

    /**
     * get a member
     */
    async getMembersMemberIdRaw(requestParameters: GetMembersMemberIdRequest): Promise<runtime.ApiResponse<Member>> {
        if (requestParameters.memberId === null || requestParameters.memberId === undefined) {
            throw new runtime.RequiredError('memberId','Required parameter requestParameters.memberId was null or undefined when calling getMembersMemberId.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/members/{member_id}`.replace(`{${"member_id"}}`, encodeURIComponent(String(requestParameters.memberId))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        });

        return new runtime.JSONApiResponse(response, (jsonValue) => MemberFromJSON(jsonValue));
    }

    /**
     * get a member
     */
    async getMembersMemberId(requestParameters: GetMembersMemberIdRequest): Promise<Member> {
        const response = await this.getMembersMemberIdRaw(requestParameters);
        return await response.value();
    }

}
